/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var v=Object.defineProperty;var O=Object.getOwnPropertyDescriptor;var E=Object.getOwnPropertyNames;var $=Object.prototype.hasOwnProperty;var L=(d,c)=>{for(var t in c)v(d,t,{get:c[t],enumerable:!0})},_=(d,c,t,o)=>{if(c&&typeof c=="object"||typeof c=="function")for(let e of E(c))!$.call(d,e)&&e!==t&&v(d,e,{get:()=>c[e],enumerable:!(o=O(c,e))||o.enumerable});return d};var C=d=>_(v({},"__esModule",{value:!0}),d);var H={};L(H,{default:()=>k});module.exports=C(H);var l=require("obsidian"),R={defaultFolder:"oreilly-highlights"},k=class extends l.Plugin{async onload(){await this.loadSettings();let t=this.addRibbonIcon("book-open","Import O'Reilly highlights",()=>{new w(this.app,this).open()});this.addCommand({id:"import-oreilly-highlights",name:"Import O'Reilly highlights from JSON",callback:()=>{new w(this.app,this).open()}}),this.addSettingTab(new S(this.app,this))}onunload(){}async loadSettings(){this.settings=Object.assign({},R,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}async processHighlights(t){console.log("Processing highlights:",t.length),console.log("First few highlights:",t.slice(0,3));let o=this.groupHighlightsByBook(t);console.log("Grouped into books:",o.size);let e=await this.ensureFolderExists(this.settings.defaultFolder),n=0;for(let[a,i]of o){console.log(`Processing book: ${a}, highlights: ${i.length}`);let[g,s]=a.split("|");console.log(`Title: "${g}", ISBN: "${s}"`),await this.createBookNote(g,s,i),n++}new l.Notice(`\u2705 Imported ${t.length} highlights from ${n} books`)}groupHighlightsByBook(t){let o=new Map;for(let e of t){console.log("Highlight data:",{epub_title:e.epub_title,epub_identifier:e.epub_identifier,pk:e.pk,chapter_title:e.chapter_title});let a=`${e.epub_title||"Untitled Book"}|${e.epub_identifier}`;o.has(a)||(o.set(a,[]),console.log(`Created new book group: ${a}`)),o.get(a).push(e)}console.log("Book groups created:");for(let[e,n]of o)console.log(`  ${e}: ${n.length} highlights`);return o}async createBookNote(t,o,e){var p;console.log(`
=== Sorting highlights for: ${t} ===`),console.log("First pk format check:",(p=e[0])==null?void 0:p.pk),e.some(r=>r.pk.includes(":"))?(e.sort((r,u)=>{let y=f=>{let b=f.pk.split(":");if(b.length>1){let x=b[1],m=parseInt(x,10);if(!isNaN(m))return m;let h=parseFloat(x);if(!isNaN(h))return h}return 0};return y(r)-y(u)}),console.log("Sorted by location from pk")):(e.sort((r,u)=>{let y=new Date(r.last_modified_time).getTime(),f=new Date(u.last_modified_time).getTime();return y-f}),console.log("Sorted by creation date (UUID-based PKs)")),console.log(`=== End sorting ===
`);let a=this.generateNoteContent(t,o,e),i=this.sanitizeFileName(t)+".md",g=`${this.settings.defaultFolder}/${i}`,s=this.app.vault.getAbstractFileByPath(g);s instanceof l.TFile?await this.app.vault.modify(s,a):await this.app.vault.create(g,a)}generateNoteContent(t,o,e){let n=e[0],a=n.chapter_url.split("/ch")[0]||"",i=[`# ${t}`,""];n.cover_url&&i.push(`![Cover](${n.cover_url})`,""),i.push(`**ISBN:** ${o}`,`**URL:** [View on O'Reilly](${a})`,"","---","","## Highlights","");let g="";for(let s of e){let p=s.chapter_title||"Unknown Chapter";p!==g&&(g=p,i.push(`### ${p}`,""));let r=s.quote.trim();if(s.pk&&s.chapter_url){let u=`${s.chapter_url}#${s.pk}`;r+=` - [link](${u})`}if(i.push(r,""),s.text&&s.text.trim()&&i.push(`**Note:** ${s.text.trim()}`,""),s.pk){let u=s.pk.split(":");u.length>1&&i.push(`**Location:** ${u[1]}`,"")}i.push("---","")}return i.join(`
`)}async ensureFolderExists(t){this.app.vault.getAbstractFileByPath(t)||await this.app.vault.createFolder(t)}sanitizeFileName(t){return!t||t==="undefined"?"Untitled Book":t.replace(/[<>:"/\\|?*]/g,"").trim()}},w=class extends l.Modal{constructor(t,o){super(t);this.plugin=o}onOpen(){let{contentEl:t,modalEl:o}=this;o.style.width="600px",o.style.maxWidth="90vw",t.empty(),t.createEl("h2",{text:"Import O'Reilly Highlights"});let e=t.createDiv();e.innerHTML=`
            <p><strong>How to export your highlights:</strong></p>
            <ol>
                <li>Go to <a href="https://learning.oreilly.com">O'Reilly Learning</a> and log in</li>
                <li>Open the browser console (F12 \u2192 Console)</li>
                <li>Copy and paste the export script below</li>
                <li>A JSON file will be downloaded automatically</li>
            </ol>
        `;let n=t.createDiv();n.style.marginTop="20px";let a=n.createEl("p",{text:"Export script (click to copy):"});a.style.marginBottom="5px";let i=n.createEl("pre",{cls:"oreilly-export-script"});i.style.backgroundColor="var(--background-secondary)",i.style.padding="10px",i.style.borderRadius="4px",i.style.fontSize="11px",i.style.maxHeight="120px",i.style.overflow="auto",i.style.cursor="pointer",i.style.userSelect="all",i.style.width="100%",i.style.boxSizing="border-box";let g="(async()=>{console.log('\u{1F680} Starting export...');let h=[],u='https://learning.oreilly.com/api/v1/annotations/all/?page_size=100',p=0;const d=document.createElement('div');d.style.cssText='position:fixed;top:20px;right:20px;background:#28a745;color:white;padding:20px;border-radius:8px;z-index:10000;font-family:Arial;box-shadow:0 4px 6px rgba(0,0,0,0.1);';d.innerHTML='<h3 style=\"margin:0 0 10px 0;\">Exporting Highlights</h3><div id=\"export-status\">Starting...</div>';document.body.appendChild(d);const s=document.getElementById('export-status');try{while(u){p++;s.textContent=`Fetching page ${p}... (${h.length} highlights)`;const r=await fetch(u),j=await r.json();j.results&&(h=h.concat(j.results));u=j.next;u&&await new Promise(r=>setTimeout(r,100))}s.textContent=`Processing ${h.length} highlights...`;const b={};h.forEach(i=>b[i.epub_title]=(b[i.epub_title]||0)+1);const e={count:h.length,results:h,exported_at:new Date().toISOString(),books:Object.keys(b).length},l=new Blob([JSON.stringify(e,null,2)],{type:'application/json'}),a=document.createElement('a');a.href=URL.createObjectURL(l);a.download=`oreilly-highlights-${new Date().toISOString().split('T')[0]}.json`;a.click();d.innerHTML=`<h3 style=\"margin:0 0 10px 0;\">\u2705 Export Complete!</h3><div>Exported ${h.length} highlights from ${Object.keys(b).length} books</div><div style=\"margin-top:10px;font-size:14px;\">Click \"Choose file\" below to import</div>`;setTimeout(()=>d.remove(),10000)}catch(e){console.error('Export failed:',e);d.style.background='#dc3545';d.innerHTML=`<h3 style=\"margin:0 0 10px 0;\">\u274C Export Failed</h3><div>${e.message}</div>`;setTimeout(()=>d.remove(),5000)}})()";i.textContent=g,i.addEventListener("click",()=>{navigator.clipboard.writeText(g),new l.Notice("Script copied to clipboard!"),i.style.backgroundColor="var(--background-modifier-success)",setTimeout(()=>{i.style.backgroundColor="var(--background-secondary)"},1e3)});let s=t.createEl("div");s.style.margin="30px 0 20px 0",s.style.borderTop="1px solid var(--background-modifier-border)",new l.Setting(t).setName("Import JSON file").setDesc("Select the downloaded highlights file").addButton(p=>{p.setButtonText("Choose file"),p.setCta();let r=document.createElement("input");r.type="file",r.accept=".json",r.style.display="none",p.buttonEl.appendChild(r),p.onClick(()=>r.click()),r.addEventListener("change",async u=>{var f,b,x;let y=(f=u.target.files)==null?void 0:f[0];if(y)try{let m=await y.text(),h=JSON.parse(m);console.log("Imported JSON structure:",{count:h.count,resultsLength:(b=h.results)==null?void 0:b.length,books:h.books,firstResult:(x=h.results)==null?void 0:x[0]}),h.results&&Array.isArray(h.results)?(this.close(),await this.plugin.processHighlights(h.results)):(new l.Notice("Invalid JSON format"),console.error("Invalid JSON structure:",h))}catch(m){new l.Notice("Failed to parse JSON file"),console.error("Parse error:",m)}})})}onClose(){let{contentEl:t}=this;t.empty()}},S=class extends l.PluginSettingTab{constructor(t,o){super(t,o);this.plugin=o}display(){let{containerEl:t}=this;t.empty(),t.createEl("h2",{text:"O'Reilly Learning Settings"}),new l.Setting(t).setName("Highlights folder").setDesc("Where to save imported highlights").addText(e=>e.setPlaceholder("oreilly-highlights").setValue(this.plugin.settings.defaultFolder).onChange(async n=>{this.plugin.settings.defaultFolder=n||"oreilly-highlights",await this.plugin.saveSettings()})),t.createEl("h3",{text:"Help"});let o=t.createDiv();o.innerHTML=`
            <p>To import your O'Reilly highlights:</p>
            <ol>
                <li>Click the book icon in the sidebar or use the command palette</li>
                <li>Copy the export script and run it on O'Reilly Learning</li>
                <li>Import the downloaded JSON file</li>
            </ol>
            <p style="margin-top: 20px;">
                <a href="https://github.com/scova0731/obsidian-oreilly-learning-plugin">Documentation</a> \u2022 
                <a href="https://github.com/scova0731/obsidian-oreilly-learning-plugin/issues">Report an issue</a>
            </p>
        `}};
